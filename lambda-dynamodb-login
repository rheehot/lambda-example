//모듈 선언.
const crypto = require('crypto')
const jwt = require('jsonwebtoken')
const doc = require('dynamodb-doc');
const dynamo = new doc.DynamoDB();

exports.handler = (event, context, callback) => {
    
    // 0. 변수선언
    const body = JSON.parse(event.body);
    const email = body.email;
    const password = body.password;
   
    const encrypted = crypto.createCipher('aes-256-cbc', 'secret');
    let encryptedpw = encrypted.update(password, 'utf8', 'base64'); 
    encryptedpw += encrypted.final('base64');

    //1. 유저 정보 조회
    const payload = {
        TableName: 'user',
        //ProjectionExpression: "#email, password",    // 1. select val, test, id
        FilterExpression: "#email=:email", // 3. where val between :start and :end
        ExpressionAttributeNames: {
            "#email": "email"
        },
        ExpressionAttributeValues: {
             ":email": email
        }
    }
    dynamo.scan(payload, (err, data) => {
        data = data.Items[0];
        if(data === undefined){
            //2 . 없으면 에러  
            callback(null, {
                    'statusCode': 500,
                    'headers': {'Content-Type': 'application/json; charset=UTF-8', 'access-control-allow-origin': '*'},
                    'body': '{"message" : "ID or PW mismatched"}'
            });
        }
        
        //3. 있으면 패스워드 체크
        else
        //3-1. 패스워드 일치하면 jwt 발급
        if(encryptedpw === data.password){
                const token = jwt.sign({
                    id: email,
                    name: data.name
                }, (process.env.JWT_SECRET || 'JWT_SECRET'), {
                    expiresIn: '30m',
                     issuer: 'get_token_controller',
                });
                callback(null, {
                    'statusCode': 200,
                    'headers': {'Content-Type': 'application/json; charset=UTF-8'},
                    'body': '{"user" : {"email":\"' +data.email +'\","username":\"'+data.name+'\","token" : ' + JSON.stringify(token) + '}}'
                });
                
        }else{
        //3-2. 패스워드 일치하지 않으면 에러 
            callback(null, {
                    'statusCode': 500,
                    'headers': {'Content-Type': 'application/json; charset=UTF-8', 'access-control-allow-origin': '*'},
                    'body': '{"message" : "ID or PW mismatched"}'
            });
        }
    });
};
